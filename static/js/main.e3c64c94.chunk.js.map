{"version":3,"sources":["components/ScanBarcode.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["html5QrCode","qrConfig","fps","qrbox","width","height","ScanBarcode","props","useEffect","Html5Qrcode","start","facingMode","qrCodeSuccessCallback","decodedText","decodedResult","handleStop","setScanResult","stop","then","res","clear","catch","err","console","log","message","style","position","id","onClick","stopScan","forceStop","App","useState","barcodeValue","isScanning","scanObj","setScanObj","value","className","type","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sKAIIA,E,kDCJW,I,mBDGTC,EAAW,CAAEC,IAAK,GAAIC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,MA8E1CC,EA3EK,SAACC,GAEjBC,qBAAU,YACNR,EAAc,IAAIS,IAAY,WAClBC,MACV,CAAEC,WAAY,eACdV,EACAW,KAED,IAEL,IAAMA,EAAwB,SAACC,EAAaC,GAGtCC,IACAR,EAAMS,cAAcH,IAgBlBE,EAAa,WACjB,IACEf,EACGiB,OACAC,MAAK,SAACC,GACLnB,EAAYoB,WAEbC,OAAM,SAACC,GACNC,QAAQC,IAAIF,EAAIG,YAEpB,MAAOH,GACPC,QAAQC,IAAIF,KAsBhB,OACE,sBAAKI,MAAO,CAAEC,SAAU,YAAxB,UACE,qBAAKC,GAAG,SAASxB,MAAM,SAIvB,wBAAQyB,QAAS,kBAvBH,WAChB,IACE7B,EACGiB,OACAC,MAAK,SAACC,GACLnB,EAAYoB,WAEbC,OAAM,SAACC,GACNC,QAAQC,IAAIF,EAAIG,YAEpB,MAAOH,GACPC,QAAQC,IAAIF,GAGdf,EAAMuB,WASmBC,IAAvB,2BEXKC,MA3Df,WAEE,MAA6BC,mBAAS,CACpCC,aAAc,GACdC,YAAY,IAFd,mBAAMC,EAAN,KAAeC,EAAf,KA0BA,OACED,EAAQD,WAAa,cAAC,EAAD,CAAanB,cAXR,SAACsB,GAE3BD,EAAW,CACTH,aAAcI,EACdH,YAAW,KAOyDL,SAnBjD,WAErBO,EAAW,CACTH,aAAc,GACdC,YAAW,OAiBb,qBAAKI,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UAEE,wBAAQC,KAAK,SAASX,QAAU,WAC9BQ,EAAW,CACTH,aAAc,GACdC,YAAW,KAHf,kBAKA,uBAAOK,KAAK,OAAOF,MAAOF,EAAQF,qBCjC3BO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e3c64c94.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Html5Qrcode } from \"html5-qrcode\";\r\n\r\nconst qrConfig = { fps: 10, qrbox: { width: 300, height: 300 } };\r\nlet html5QrCode;\r\n\r\nconst ScanBarcode = (props) => {\r\n\r\n    useEffect(() => {\r\n        html5QrCode = new Html5Qrcode(\"reader\");\r\n        html5QrCode.start(\r\n          { facingMode: \"environment\" },\r\n          qrConfig,\r\n          qrCodeSuccessCallback\r\n        );\r\n      }, []);\r\n    \r\n    const qrCodeSuccessCallback = (decodedText, decodedResult) => {\r\n            \r\n          //props.onResult(decodedText);\r\n          handleStop();\r\n          props.setScanResult(decodedText);\r\n    };\r\n\r\n    //   const handleClickAdvanced = () => {\r\n    //     const qrCodeSuccessCallback = (decodedText, decodedResult) => {\r\n    //       props.onResult(decodedText);\r\n    //       handleStop();\r\n    //     };\r\n\r\n    //     html5QrCode.start(\r\n    //       { facingMode: \"environment\" },\r\n    //       qrConfig,\r\n    //       qrCodeSuccessCallback\r\n    //     );\r\n    //   };\r\n    \r\n      const handleStop = () => {\r\n        try {\r\n          html5QrCode\r\n            .stop()\r\n            .then((res) => {\r\n              html5QrCode.clear();              \r\n            })\r\n            .catch((err) => {\r\n              console.log(err.message);              \r\n            });\r\n        } catch (err) {\r\n          console.log(err);          \r\n        }\r\n        \r\n      };\r\n\r\n      const forceStop = () => {\r\n        try {\r\n          html5QrCode\r\n            .stop()\r\n            .then((res) => {\r\n              html5QrCode.clear();\r\n            })\r\n            .catch((err) => {\r\n              console.log(err.message);\r\n            });\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n\r\n        props.stopScan();\r\n      };\r\n    \r\n      return (\r\n        <div style={{ position: \"relative\" }}>\r\n          <div id=\"reader\" width=\"100%\" />\r\n          {/* <button onClick={() => handleClickAdvanced()}>\r\n            QR code Scan\r\n          </button> */}\r\n          <button onClick={() => forceStop()}>stop Scan</button>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default ScanBarcode;\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport {useState} from 'react';\nimport './components/ScanBarcode';\nimport ScanBarcode from './components/ScanBarcode';\n\nfunction App() {\n\n  const[scanObj, setScanObj] = useState({\n    barcodeValue: '',\n    isScanning: false\n  })\n\n  // const[bacodeValue,setBarcodeValue] = useState('aaa');\n  // const[isScanning, setIsScanning] = useState(false);\n\n  const stopScanQRCode = () => {\n    //setIsScanning(false);\n    setScanObj({\n      barcodeValue: '',\n      isScanning:false\n    })\n  }\n\n  const setQRCodeScanResult = (value) => {\n    //setBarcodeValue(value);\n    setScanObj({\n      barcodeValue: value,\n      isScanning:false\n    })\n  }\n\n\n\n  return (\n    scanObj.isScanning ? <ScanBarcode setScanResult={setQRCodeScanResult} stopScan = {stopScanQRCode} />\n    :\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        <button type=\"button\" onClick={ () => { \n          setScanObj({\n            barcodeValue: '',\n            isScanning:true\n          }) }}>Scan</button>\n        <input type=\"text\" value={scanObj.barcodeValue}></input>\n\n\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a> */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}